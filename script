#!/bin/bash

# color styling variables
blue=220
yellow=27
export FOREGROUND=$blue
export BORDER_FOREGROUND=$yellow
export GUM_CONFIRM_PROMPT_FOREGROUND=$blue
export GUM_CONFIRM_SELECTED_BACKGROUND=$yellow
export GUM_INPUT_PROMPT_FOREGROUND=$blue
export GUM_INPUT_CURSOR_FOREGROUND=$yellow
export GUM_CHOOSE_HEADER_FOREGROUND=$blue
export GUM_CHOOSE_SELECTED_FOREGROUND=$yellow
export GUM_CHOOSE_CURSOR_FOREGROUND=$yellow
VSCODE_PATH=$HOME/Documents

# checking if the user is root and ~/.local/bin is in PATH
if [ "$EUID" -eq 0 ]; then
	echo "Please do not run as root"
	exit 1
fi
[ -d "$HOME/.local/bin" ] || mkdir -p "$HOME/.local/bin"
if [[ ":$PATH:" != *":$HOME/.local/bin:"* ]]; then
	export PATH="$HOME/.local/bin:$PATH"
fi

if ! command -v gum &> /dev/null; then
	cd ~
	echo "Downloading gum..."
	wget -q --show-progress https://github.com/charmbracelet/gum/releases/download/v0.14.5/gum_0.14.5_Linux_x86_64.tar.gz
	tar -xzf gum_0.14.5_Linux_x86_64.tar.gz
	mv gum_0.14.5_Linux_x86_64/gum $HOME/.local/bin
	rm -rf gum_0.14.5_Linux_x86_64.tar.gz gum_0.14.5_Linux_x86_64
fi

gum style --bold --width 40 --border double --padding "1 2" --align center "Welcome to the Linux setup script! by andrexandre"

verify_installed_stuff() {
	gum confirm "Do you have root privileges?" && ROOT='y' || ROOT='n'
	cmds=("zsh" "git")
	for cmd in "${cmds[@]}"; do
		if [ "$ROOT" = 'n' ]; then
			echo -e "ℹ️  $cmd is assumed to be installed"
		elif command -v $cmd &> /dev/null; then
			echo -e "✅ $cmd is installed"
		else
			echo -e "❌ $cmd isn't installed"
		fi
	done
	if ([ "$ROOT" = 'y' ] && command -v code &> /dev/null) ||
		([ "$ROOT" = 'n' ] && [ -d $VSCODE_PATH/vscode ]); then
		echo -e "✅ code is installed"
		CODEINSTALLED=y
	else
		echo -e "❌ code isn't installed"
		CODEINSTALLED=n
	fi
	if [ -f $HOME/.zshrc ]; then
		if grep -q "My custom aliases" $HOME/.zshrc; then
			echo -e "✅ aliases are added"
		else
			echo -e "❌ aliases aren't added"
		fi
	else
		echo -e "❌ zsh isn't installed"
	fi
}
install_cmd() {
	if [ -z "$1" ]; then
		echo "No program name provided."
		return
	fi
	if [ "$1" = "-i" ] || [ "$1" = "--input" ]; then
		set -- "$(gum input --placeholder "Enter the program to install:")"
	fi
	if ! command -v $1 &> /dev/null; then
		if ! apt-cache policy $1 | grep -q 'Installed: (none)'; then
			echo "The package $1 doesn't exist."
			return
		fi
		if [ "$ROOT" = 'y' ]; then
			sudo apt-get install -y $1
		else
			gum confirm "Are you sure you want to install a program without root?" && true || return
			apt-get download $1
			dpkg -x $1*.deb /tmp/command
			rm $1*.deb
			cp /tmp/command/usr/bin/$1 $HOME/.local/bin
			rm -rf /tmp/command
		fi
	else
		echo "$1 is already installed."
	fi
}
# Configurating extensions
install_gnome_extensions() {
	cd $VSCODE_PATH
	wget https://addons.mozilla.org/firefox/downloads/file/4300298/gnome_shell_integration-12.xpi
	firefox gnome_shell_integration-12.xpi https://extensions.gnome.org/extension/1160/dash-to-panel/ https://extensions.gnome.org/extension/779/clipboard-indicator/
	rm gnome_shell_integration-12.xpi
	cd -
}
# Configurating oh-my-zsh
install_oh_my_zsh() {
	install_cmd "zsh"
	install_cmd "git"
	sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
}
# Configurating vscode
export FILE=$HOME/.config/Code/User/settings.json
install_vscode_root() {
	open https://go.microsoft.com/fwlink/\?LinkID\=760868
	cd $HOME/Downloads
	sleep 5
	sudo dpkg -i code*.deb
	sudo apt-get install -f code
	rm code*.deb
}
install_vscode_rootless() {
	echo downloading vscode
	wget -q -O visual-studio-code.tgz https://code.visualstudio.com/sha/download\?build\=stable\&os\=linux-x64
	tar -xzf visual-studio-code.tgz
	mv VSCode-linux-x64 vscode
	rm -rf visual-studio-code.tgz
	mv vscode $VSCODE_PATH
	cd $VSCODE_PATH/vscode/bin
}
install_vscode_extensions() {
	./code --install-extension mhutchie.git-graph
	./code --install-extension ms-vscode.cpptools
	./code --install-extension github.copilot
}
configure_vscode_settings() {
	if [ ! -f $FILE ]; then
		echo creating settings.json
		[ -d "$HOME/.config/Code/User" ] || mkdir -p "$HOME/.config/Code/User"
		cat << 'EOF' >> $FILE
{
	"github.copilot.editor.enableCodeActions": false,
	"extensions.ignoreRecommendations": true,
	"workbench.startupEditor": "none",
	"editor.detectIndentation": false,
	"editor.insertSpaces": false,
	"files.autoSave": "afterDelay"
}
EOF
	else
		echo settings.json already created
	fi
}
# Configurating alias
adding_alias() {
	if grep -q "My custom aliases" $HOME/.zshrc; then
		echo aliases already added
		return
	fi
	echo adding aliases to .zshrc
	cat << 'EOF' >> $HOME/.zshrc
#My custom aliases
alias fgit='find . -type d -name ".git"'
alias ccc='cc -Wall -Wextra -Werror *.c -lbsd -lreadline && ./a.out'
c() {
	if [ -z "$1" ]; then
		$VSCODE_PATH/vscode/bin/code .
	else
		$VSCODE_PATH/vscode/bin/code $1
	fi
}
gacp() {
	if [ -z "$1" ]; then
		git add -A && git commit -m "Update" && git push
	else
		git add -A && git commit -m "$1" && git push
	fi
}
export ZSH_COMPDUMP=$ZSH/cache/.zcompdump-$HOST
EOF
	sed -i 's/robbyrussell/simple/g' $HOME/.zshrc
}
setting_default_shell() {
	if [ "$SHELL" = '/usr/bin/zsh' ]; then
		echo changing the default shell
		if [ "$ROOT" = 'y' ]; then
			chsh -s $(which zsh)
		else
			echo exec /bin/zsh > $HOME/.bashrc
		fi
	else
		echo default shell is already $SHELL
	fi
}
main() {
	while true; do
		REPLY=$(gum choose mode ls "install_cmd -i" install_gnome_extensions install_oh_my_zsh install_vscode_root install_vscode_extensions configure_vscode_settings adding_alias setting_default_shell exit)
		if [ "$REPLY" = "mode" ]; then
			verify_installed_stuff
			break
		fi
		$REPLY
	done
}
main
echo mode root: $ROOT
exit
install_gnome_extensions
install_oh_my_zsh
if [ "$ROOT" = 'y' ]; then
	install_vscode_root
else
	install_vscode_rootless
fi
install_vscode_extensions
configure_vscode_settings
adding_alias
setting_default_shell
